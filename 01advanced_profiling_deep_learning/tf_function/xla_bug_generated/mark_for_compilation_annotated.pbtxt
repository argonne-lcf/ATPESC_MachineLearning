node {
  name: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/Const_1"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/weighted_loss/Const_1"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/num_elements/Cast"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        tensor_content: "\000\000\200D"
      }
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/weighted_loss/num_elements/Cast"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "unclustered/adam_adam_update_9_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_9/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 34
    }
  }
}
node {
  name: "unclustered/adam_adam_update_9_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_9/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 35
    }
  }
}
node {
  name: "unclustered/adam_adam_update_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 16
    }
  }
}
node {
  name: "unclustered/adam_adam_update_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 17
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-PermConstNHWCToNCHW-LayoutOptimizer"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "unclustered/adam_adam_update_1_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_1/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 18
    }
  }
}
node {
  name: "unclustered/adam_adam_update_1_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_1/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 19
    }
  }
}
node {
  name: "unclustered/adam_adam_update_2_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_2/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 20
    }
  }
}
node {
  name: "unclustered/adam_adam_update_2_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_2/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 21
    }
  }
}
node {
  name: "unclustered/adam_adam_update_3_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_3/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 22
    }
  }
}
node {
  name: "unclustered/adam_adam_update_3_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_3/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 23
    }
  }
}
node {
  name: "unclustered/adam_adam_update_4_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_4/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 24
    }
  }
}
node {
  name: "unclustered/adam_adam_update_4_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_4/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 25
    }
  }
}
node {
  name: "unclustered/adam_adam_update_5_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_5/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 26
    }
  }
}
node {
  name: "unclustered/adam_adam_update_5_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_5/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 27
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/flatten/Reshape_grad/Shape"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\004\000\000\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/flatten/Reshape_grad/Shape"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "unclustered/adam_adam_update_6_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_6/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 4608
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 28
    }
  }
}
node {
  name: "unclustered/adam_adam_update_6_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_6/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 4608
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 29
    }
  }
}
node {
  name: "unclustered/adam_adam_update_7_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_7/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 30
    }
  }
}
node {
  name: "unclustered/adam_adam_update_7_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_7/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 31
    }
  }
}
node {
  name: "unclustered/adam_adam_update_8_resourceapplyadam_m"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_8/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 32
    }
  }
}
node {
  name: "unclustered/adam_adam_update_8_resourceapplyadam_v"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/Adam/update_8/ResourceApplyAdam"
      }
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 33
    }
  }
}
node {
  name: "unclustered/adam_readvariableop_resource"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 13
    }
  }
}
node {
  name: "cluster_0/Adam/add/y"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "unclustered/adam_cast_readvariableop_resource"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 12
    }
  }
}
node {
  name: "unclustered/adam_cast_2_readvariableop_resource"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 14
    }
  }
}
node {
  name: "unclustered/adam_cast_3_readvariableop_resource"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 15
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0009765625
      }
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/sub"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        tensor_content: "\376\377\177?"
      }
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/sub"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/Adam/Const"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-07
      }
    }
  }
}
node {
  name: "unclustered/y_true"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "_user_specified_name"
    value {
      s: "y_true"
    }
  }
  attr {
    key: "index"
    value {
      i: 1
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 10
          }
        }
        float_val: 0
      }
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "unclustered/data"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 28
          }
          dim {
            size: 28
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_user_specified_name"
    value {
      s: "data"
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu-0-1-PermConstNCHWToNHWC-LayoutOptimizer"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/flatten/Const"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\022\000\000"
      }
    }
  }
  experimental_debug_info {
    original_node_names: "flatten/Const"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "unclustered/unknown_0"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 3
    }
  }
}
node {
  name: "unclustered/unknown"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 2
    }
  }
}
node {
  name: "unclustered/unknown_2"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 5
    }
  }
}
node {
  name: "unclustered/unknown_1"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 4
    }
  }
}
node {
  name: "unclustered/unknown_4"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 7
    }
  }
}
node {
  name: "unclustered/unknown_3"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 6
    }
  }
}
node {
  name: "unclustered/unknown_6"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 9
    }
  }
}
node {
  name: "unclustered/unknown_5"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 4608
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 8
    }
  }
}
node {
  name: "unclustered/unknown_8"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 11
    }
  }
}
node {
  name: "unclustered/unknown_7"
  op: "_Arg"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_handle_dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_handle_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index"
    value {
      i: 10
    }
  }
}
node {
  name: "cluster_0/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/adam_readvariableop_resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cluster_0/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/adam_cast_readvariableop_resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cluster_0/Adam/Cast_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/adam_cast_2_readvariableop_resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cluster_0/Adam/Cast_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/adam_cast_3_readvariableop_resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Cast"
  op: "Cast"
  input: "unclustered/y_true"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/Cast"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-TransposeNHWCToNCHW-LayoutOptimizer"
  op: "Transpose"
  input: "unclustered/data"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-PermConstNHWCToNCHW-LayoutOptimizer/clone_0"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_0"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d/BiasAdd/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d/Conv2D/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_2"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_1/BiasAdd/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_1/Conv2D/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_4"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_2/BiasAdd/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_3"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_2/Conv2D/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_6"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "dense/BiasAdd/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_5"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "dense/MatMul/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_8"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "dense_1/BiasAdd/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "unclustered/unknown_7"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "dense_1/MatMul/ReadVariableOp"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/Adam/add"
  op: "AddV2"
  input: "cluster_0/Adam/ReadVariableOp"
  input: "cluster_0/Adam/add/y"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Cast_1"
  op: "Cast"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Cast"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/Cast_1"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D"
  op: "Conv2D"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-TransposeNHWCToNCHW-LayoutOptimizer"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d/Conv2D"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/ShapeN-matshapes-1"
  op: "Const"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D/ReadVariableOp"
  input: "^unclustered/data"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  op: "NoOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/BiasAdd/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/BiasAdd/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/BiasAdd/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/BiasAdd/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/BiasAdd/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/Adam/Cast_1"
  op: "Cast"
  input: "cluster_0/Adam/add"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Conv2D"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d/BiasAdd"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall"
  op: "NoOp"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/Adam/Pow"
  op: "Pow"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/Adam/Pow_1"
  op: "Pow"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Cast_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  op: "Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/BiasAdd"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d/Relu"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_1/Conv2D"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/ShapeN-matshapes-1"
  op: "Const"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput-0-DataFormatVecPermuteNHWCToNCHW-LayoutOptimizer"
  op: "Const"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\004\000\000 \000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_1/BiasAdd"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Relu"
  op: "Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/BiasAdd"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_1/Relu"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  op: "MaxPool"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Relu"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  experimental_debug_info {
    original_node_names: "max_pooling2d/MaxPool"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_2/Conv2D"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/ShapeN-matshapes-1"
  op: "Const"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput-0-DataFormatVecPermuteNHWCToNCHW-LayoutOptimizer"
  op: "Const"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  input: "^cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\004\000\000@\000\000\000\n\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_2/BiasAdd"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu"
  op: "Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/BiasAdd"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "conv2d_2/Relu"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu-0-1-TransposeNCHWToNHWC-LayoutOptimizer"
  op: "Transpose"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu-0-1-PermConstNCHWToNHWC-LayoutOptimizer"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/flatten/Reshape"
  op: "Reshape"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu-0-1-TransposeNCHWToNHWC-LayoutOptimizer"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/flatten/Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "flatten/Reshape"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul"
  op: "MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/flatten/Reshape"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  experimental_debug_info {
    original_node_names: "dense/MatMul"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/BiasAdd"
  op: "BiasAdd"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  experimental_debug_info {
    original_node_names: "dense/BiasAdd"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/Relu"
  op: "Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/BiasAdd"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "dense/Relu"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul"
  op: "MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  experimental_debug_info {
    original_node_names: "dense_1/MatMul"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  experimental_debug_info {
    original_node_names: "dense_1/BiasAdd"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/Softmax"
  op: "Softmax"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/BiasAdd"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "dense_1/Softmax"
    original_func_names: "__forward_call_452"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/Softmax"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/sub"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value/Minimum"
  op: "Minimum"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/Softmax"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/sub"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/clip_by_value/Minimum"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value/Minimum"
  input: "cluster_0/Adam/Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value"
  op: "Maximum"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value/Minimum"
  input: "cluster_0/Adam/Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/clip_by_value"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Log"
  op: "Log"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/Log"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Log"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/Cast_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/Const_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/weighted_loss/Sum"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/value"
  op: "DivNoNan"
  input: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/Sum"
  input: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/num_elements/Cast"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  experimental_debug_info {
    original_node_names: "sparse_categorical_crossentropy/weighted_loss/value"
    original_func_names: "__forward_compute_loss_366"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "cluster_0/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/clip_by_value"
  input: "^cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/Log_grad/mul"
  op: "Mul"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/Log_grad/mul"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2"
  op: "SelectV2"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/Log_grad/mul"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
  op: "SelectV2"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
    original_func_names: "__inference___backward_compute_loss_284_367"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul"
  op: "Mul"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/Softmax"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/Softmax_grad/mul"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/Sum"
  op: "Sum"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/Softmax_grad/Sum"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/sub"
  op: "Sub"
  input: "cluster_0/PartitionedCall/gradients/PartitionedCall_grad/PartitionedCall_10/gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/Sum"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/Softmax_grad/sub"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul_1"
  op: "Mul"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/sub"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/Softmax"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/Softmax_grad/mul_1"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/Relu"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul_1"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/MatMul_grad/MatMul_1"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/Softmax_grad/mul_1"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense_1/MatMul/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense_1/MatMul_grad/MatMul"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/Adam/Adam/update_9/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_8"
  input: "unclustered/adam_adam_update_9_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_9_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/Adam/Adam/update_8/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_7"
  input: "unclustered/adam_adam_update_8_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_8_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/MatMul_grad/MatMul_1"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense_1/MatMul_grad/MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/Relu"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense/Relu_grad/ReluGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/Relu_grad/ReluGrad"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/dense/MatMul/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense/MatMul_grad/MatMul"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/flatten/Reshape"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense/MatMul_grad/MatMul_1"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/dense/BiasAdd_grad/BiasAddGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/MatMul_grad/MatMul"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/flatten/Reshape_grad/Shape"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/flatten/Reshape_grad/Reshape"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/Adam/Adam/update_6/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_5"
  input: "unclustered/adam_adam_update_6_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_6_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/MatMul_grad/MatMul_1"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/Adam/Adam/update_7/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_6"
  input: "unclustered/adam_adam_update_7_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_7_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad-0-TransposeNHWCToNCHW-LayoutOptimizer"
  op: "Transpose"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/flatten/Reshape_grad/Reshape"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-PermConstNHWCToNCHW-LayoutOptimizer"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad-0-TransposeNHWCToNCHW-LayoutOptimizer"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Relu"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_2/Relu_grad/ReluGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput-0-DataFormatVecPermuteNHWCToNCHW-LayoutOptimizer"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_2/Conv2D/ReadVariableOp"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  input: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/ShapeN-matshapes-1"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Relu"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/max_pooling2d/MaxPool"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/Adam/Adam/update_4/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_3"
  input: "unclustered/adam_adam_update_4_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_4_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/Adam/Adam/update_5/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_4"
  input: "unclustered/adam_adam_update_5_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_5_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Relu"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_1/Relu_grad/ReluGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput-0-DataFormatVecPermuteNHWCToNCHW-LayoutOptimizer"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d_1/Conv2D/ReadVariableOp"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  input: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/ShapeN-matshapes-1"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  input: "cluster_0/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/conv2d/Relu"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d/Relu_grad/ReluGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/Adam/Adam/update_2/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_1"
  input: "unclustered/adam_adam_update_2_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_2_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/Adam/Adam/update_3/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_2"
  input: "unclustered/adam_adam_update_3_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_3_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-TransposeNHWCToNCHW-LayoutOptimizer"
  input: "cluster_0/ConstantFolding/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/ShapeN-matshapes-1"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Relu_grad/ReluGrad"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  experimental_debug_info {
    original_node_names: "gradients/conv2d/BiasAdd_grad/BiasAddGrad"
    original_func_names: "__inference___backward_call_389_453"
  }
}
node {
  name: "cluster_0/Adam/Adam/update/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown"
  input: "unclustered/adam_adam_update_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "cluster_0/Adam/Adam/update_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "unclustered/unknown_0"
  input: "unclustered/adam_adam_update_1_resourceapplyadam_m"
  input: "unclustered/adam_adam_update_1_resourceapplyadam_v"
  input: "cluster_0/Adam/Pow"
  input: "cluster_0/Adam/Pow_1"
  input: "cluster_0/Adam/Cast/ReadVariableOp"
  input: "cluster_0/Adam/Cast_2/ReadVariableOp"
  input: "cluster_0/Adam/Cast_3/ReadVariableOp"
  input: "cluster_0/Adam/Const"
  input: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  input: "^cluster_0/Func/StatefulPartitionedCall/mnist_classifier/StatefulPartitionedCall/output_control_node/_104"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "unclustered/Adam/Adam/Const"
  op: "Const"
  input: "^cluster_0/Adam/Adam/update/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_1/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_2/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_3/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_4/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_5/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_6/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_7/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_8/ResourceApplyAdam"
  input: "^cluster_0/Adam/Adam/update_9/ResourceApplyAdam"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "unclustered/Adam/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "unclustered/adam_readvariableop_resource"
  input: "unclustered/Adam/Adam/Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "unclustered/Identity"
  op: "Identity"
  input: "unclustered/StatefulPartitionedCall/PartitionedCall/sparse_categorical_crossentropy/weighted_loss/value"
  input: "^unclustered/Adam/Adam/AssignAddVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unclustered/identity_RetVal"
  op: "_Retval"
  input: "unclustered/Identity"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
node {
  name: "cluster_0/PartitionedCall/gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter-0-PermConstNHWCToNCHW-LayoutOptimizer/clone_0"
  op: "Const"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "_XlaAlreadyClustered"
    value {
      b: true
    }
  }
  attr {
    key: "_XlaCluster"
    value {
      s: "cluster_0"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
library {
  function {
    signature {
      name: "__inference___backward_call_389_453"
      input_arg {
        name: "placeholder"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_1_softmax_grad_mul_dense_1_softmax"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_1_matmul_grad_matmul_dense_1_matmul_readvariableop"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_1_matmul_grad_matmul_1_dropout_1_identity"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_relu_grad_relugrad_dense_relu"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_matmul_grad_matmul_dense_matmul_readvariableop"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_dense_matmul_grad_matmul_1_flatten_reshape"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_2_relu_grad_relugrad_conv2d_2_relu"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_2_conv2d_grad_shapen_dropout_identity"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_2_conv2d_grad_shapen_conv2d_2_conv2d_readvariableop"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_max_pooling2d_maxpool_grad_maxpoolgrad_conv2d_1_relu"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_max_pooling2d_maxpool_grad_maxpoolgrad_max_pooling2d_maxpool"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_relu"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_1_conv2d_readvariableop"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_conv2d_grad_shapen_inputs"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_conv2d_conv2d_grad_shapen_conv2d_conv2d_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_10"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/dense_1/Softmax_grad/mul"
      op: "Mul"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_dense_1_softmax_grad_mul_dense_1_softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/Softmax_grad/mul"
      }
    }
    node_def {
      name: "gradients/dense_1/Softmax_grad/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/Softmax_grad/Sum/reduction_indices"
      }
    }
    node_def {
      name: "gradients/dense_1/Softmax_grad/Sum"
      op: "Sum"
      input: "gradients/dense_1/Softmax_grad/mul:z:0"
      input: "gradients/dense_1/Softmax_grad/Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/Softmax_grad/Sum"
      }
    }
    node_def {
      name: "gradients/dense_1/Softmax_grad/sub"
      op: "Sub"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/dense_1/Softmax_grad/Sum:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/Softmax_grad/sub"
      }
    }
    node_def {
      name: "gradients/dense_1/Softmax_grad/mul_1"
      op: "Mul"
      input: "gradients/dense_1/Softmax_grad/sub:z:0"
      input: "gradients_dense_1_softmax_grad_mul_dense_1_softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/Softmax_grad/mul_1"
      }
    }
    node_def {
      name: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/dense_1/Softmax_grad/mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/dense_1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/dense_1/Softmax_grad/mul_1:z:0"
      input: "gradients_dense_1_matmul_grad_matmul_dense_1_matmul_readvariableop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/MatMul_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/dense_1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients_dense_1_matmul_grad_matmul_1_dropout_1_identity"
      input: "gradients/dense_1/Softmax_grad/mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense_1/MatMul_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/dense/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "gradients/dense_1/MatMul_grad/MatMul:product:0"
      input: "gradients_dense_relu_grad_relugrad_dense_relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense/Relu_grad/ReluGrad"
      }
    }
    node_def {
      name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/dense/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/dense/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/dense/Relu_grad/ReluGrad:backprops:0"
      input: "gradients_dense_matmul_grad_matmul_dense_matmul_readvariableop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense/MatMul_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/dense/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients_dense_matmul_grad_matmul_1_flatten_reshape"
      input: "gradients/dense/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/dense/MatMul_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/flatten/Reshape_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\004\000\000\006\000\000\000\006\000\000\000\200\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/flatten/Reshape_grad/Shape"
      }
    }
    node_def {
      name: "gradients/flatten/Reshape_grad/Reshape"
      op: "Reshape"
      input: "gradients/dense/MatMul_grad/MatMul:product:0"
      input: "gradients/flatten/Reshape_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/flatten/Reshape_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/conv2d_2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "gradients/flatten/Reshape_grad/Reshape:output:0"
      input: "gradients_conv2d_2_relu_grad_relugrad_conv2d_2_relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_2/Relu_grad/ReluGrad"
      }
    }
    node_def {
      name: "gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/conv2d_2/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/conv2d_2/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "gradients_conv2d_2_conv2d_grad_shapen_dropout_identity"
      input: "gradients_conv2d_2_conv2d_grad_shapen_conv2d_2_conv2d_readvariableop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_2/Conv2D_grad/ShapeN"
      }
    }
    node_def {
      name: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "gradients/conv2d_2/Conv2D_grad/ShapeN:output:0"
      input: "gradients_conv2d_2_conv2d_grad_shapen_conv2d_2_conv2d_readvariableop"
      input: "gradients/conv2d_2/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
    node_def {
      name: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "gradients_conv2d_2_conv2d_grad_shapen_dropout_identity"
      input: "gradients/conv2d_2/Conv2D_grad/ShapeN:output:1"
      input: "gradients/conv2d_2/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
    node_def {
      name: "gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "gradients_max_pooling2d_maxpool_grad_maxpoolgrad_conv2d_1_relu"
      input: "gradients_max_pooling2d_maxpool_grad_maxpoolgrad_max_pooling2d_maxpool"
      input: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
      }
    }
    node_def {
      name: "gradients/conv2d_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad:output:0"
      input: "gradients_max_pooling2d_maxpool_grad_maxpoolgrad_conv2d_1_relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_1/Relu_grad/ReluGrad"
      }
    }
    node_def {
      name: "gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/conv2d_1/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/conv2d_1/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_relu"
      input: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_1_conv2d_readvariableop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_1/Conv2D_grad/ShapeN"
      }
    }
    node_def {
      name: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "gradients/conv2d_1/Conv2D_grad/ShapeN:output:0"
      input: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_1_conv2d_readvariableop"
      input: "gradients/conv2d_1/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
    node_def {
      name: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_relu"
      input: "gradients/conv2d_1/Conv2D_grad/ShapeN:output:1"
      input: "gradients/conv2d_1/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
    node_def {
      name: "gradients/conv2d/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput:output:0"
      input: "gradients_conv2d_1_conv2d_grad_shapen_conv2d_relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d/Relu_grad/ReluGrad"
      }
    }
    node_def {
      name: "gradients/conv2d/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/conv2d/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/conv2d/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "gradients_conv2d_conv2d_grad_shapen_inputs"
      input: "gradients_conv2d_conv2d_grad_shapen_conv2d_conv2d_readvariableop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d/Conv2D_grad/ShapeN"
      }
    }
    node_def {
      name: "gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "gradients/conv2d/Conv2D_grad/ShapeN:output:0"
      input: "gradients_conv2d_conv2d_grad_shapen_conv2d_conv2d_readvariableop"
      input: "gradients/conv2d/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
    node_def {
      name: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "gradients_conv2d_conv2d_grad_shapen_inputs"
      input: "gradients/conv2d/Conv2D_grad/ShapeN:output:1"
      input: "gradients/conv2d/Relu_grad/ReluGrad:backprops:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/conv2d/Conv2D_grad/Conv2DBackpropInput:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/conv2d/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/conv2d_1/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_5"
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/conv2d_2/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_6"
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/dense/MatMul_grad/MatMul_1:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_7"
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/dense/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_8"
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/dense_1/MatMul_grad/MatMul_1:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_9"
      }
    }
    node_def {
      name: "Identity_10"
      op: "Identity"
      input: "gradients/dense_1/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_10"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_10"
      value: "Identity_10:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    attr {
      key: "forward_function_name"
      value {
        s: "__forward_call_452"
      }
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 4608
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 4608
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 6
                }
                dim {
                  size: 6
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
                dim {
                  size: 10
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 64
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 20
                }
                dim {
                  size: 20
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
                dim {
                  size: 10
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 24
                }
                dim {
                  size: 24
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 32
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 28
                }
                dim {
                  size: 28
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__forward_call_452"
      input_arg {
        name: "inputs_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "conv2d_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "conv2d_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "conv2d_1_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "conv2d_1_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "conv2d_2_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "conv2d_2_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "dense_matmul_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "dense_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "dense_1_matmul_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "dense_1_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "dense_1_softmax"
        type: DT_FLOAT
      }
      output_arg {
        name: "dense_1_matmul_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "dropout_1_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "dense_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "dense_matmul_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "flatten_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_2_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "dropout_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_2_conv2d_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_1_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "max_pooling2d_maxpool"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_relu"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_1_conv2d_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "inputs"
        type: DT_FLOAT
      }
      output_arg {
        name: "conv2d_conv2d_readvariableop"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "conv2d/BiasAdd/ReadVariableOp"
      control_output: "conv2d/Conv2D/ReadVariableOp"
      control_output: "conv2d_1/BiasAdd/ReadVariableOp"
      control_output: "conv2d_1/Conv2D/ReadVariableOp"
      control_output: "conv2d_2/BiasAdd/ReadVariableOp"
      control_output: "conv2d_2/Conv2D/ReadVariableOp"
      control_output: "dense/BiasAdd/ReadVariableOp"
      control_output: "dense/MatMul/ReadVariableOp"
      control_output: "dense_1/BiasAdd/ReadVariableOp"
      control_output: "dense_1/MatMul/ReadVariableOp"
    }
    node_def {
      name: "conv2d/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_conv2d_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d/Conv2D/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d/Conv2D"
      op: "Conv2D"
      input: "inputs_0"
      input: "conv2d/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d/Conv2D"
      }
    }
    node_def {
      name: "conv2d/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_biasadd_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d/BiasAdd"
      op: "BiasAdd"
      input: "conv2d/Conv2D:output:0"
      input: "conv2d/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d/BiasAdd"
      }
    }
    node_def {
      name: "conv2d/Relu"
      op: "Relu"
      input: "conv2d/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d/Relu"
      }
    }
    node_def {
      name: "conv2d_1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1_conv2d_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_1/Conv2D/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d_1/Conv2D"
      op: "Conv2D"
      input: "conv2d/Relu:activations:0"
      input: "conv2d_1/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_1/Conv2D"
      }
    }
    node_def {
      name: "conv2d_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_1_biasadd_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_1/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d_1/BiasAdd"
      op: "BiasAdd"
      input: "conv2d_1/Conv2D:output:0"
      input: "conv2d_1/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_1/BiasAdd"
      }
    }
    node_def {
      name: "conv2d_1/Relu"
      op: "Relu"
      input: "conv2d_1/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_1/Relu"
      }
    }
    node_def {
      name: "max_pooling2d/MaxPool"
      op: "MaxPool"
      input: "conv2d_1/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "max_pooling2d/MaxPool"
      }
    }
    node_def {
      name: "dropout/Identity"
      op: "Identity"
      input: "max_pooling2d/MaxPool:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dropout/Identity"
      }
    }
    node_def {
      name: "conv2d_2/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2_conv2d_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_2/Conv2D/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d_2/Conv2D"
      op: "Conv2D"
      input: "dropout/Identity:output:0"
      input: "conv2d_2/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_2/Conv2D"
      }
    }
    node_def {
      name: "conv2d_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2d_2_biasadd_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_2/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "conv2d_2/BiasAdd"
      op: "BiasAdd"
      input: "conv2d_2/Conv2D:output:0"
      input: "conv2d_2/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_2/BiasAdd"
      }
    }
    node_def {
      name: "conv2d_2/Relu"
      op: "Relu"
      input: "conv2d_2/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "conv2d_2/Relu"
      }
    }
    node_def {
      name: "flatten/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\000\022\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "flatten/Const"
      }
    }
    node_def {
      name: "flatten/Reshape"
      op: "Reshape"
      input: "conv2d_2/Relu:activations:0"
      input: "flatten/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "flatten/Reshape"
      }
    }
    node_def {
      name: "dense/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_matmul_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense/MatMul/ReadVariableOp"
      }
    }
    node_def {
      name: "dense/MatMul"
      op: "MatMul"
      input: "flatten/Reshape:output:0"
      input: "dense/MatMul/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "dense/MatMul"
      }
    }
    node_def {
      name: "dense/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_biasadd_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "dense/BiasAdd"
      op: "BiasAdd"
      input: "dense/MatMul:product:0"
      input: "dense/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "dense/BiasAdd"
      }
    }
    node_def {
      name: "dense/Relu"
      op: "Relu"
      input: "dense/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense/Relu"
      }
    }
    node_def {
      name: "dropout_1/Identity"
      op: "Identity"
      input: "dense/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dropout_1/Identity"
      }
    }
    node_def {
      name: "dense_1/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1_matmul_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense_1/MatMul/ReadVariableOp"
      }
    }
    node_def {
      name: "dense_1/MatMul"
      op: "MatMul"
      input: "dropout_1/Identity:output:0"
      input: "dense_1/MatMul/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "dense_1/MatMul"
      }
    }
    node_def {
      name: "dense_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1_biasadd_readvariableop_resource"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense_1/BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "dense_1/BiasAdd"
      op: "BiasAdd"
      input: "dense_1/MatMul:product:0"
      input: "dense_1/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "dense_1/BiasAdd"
      }
    }
    node_def {
      name: "dense_1/Softmax"
      op: "Softmax"
      input: "dense_1/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "dense_1/Softmax"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "dense_1/Softmax:softmax:0"
      input: "^conv2d/BiasAdd/ReadVariableOp"
      input: "^conv2d/Conv2D/ReadVariableOp"
      input: "^conv2d_1/BiasAdd/ReadVariableOp"
      input: "^conv2d_1/Conv2D/ReadVariableOp"
      input: "^conv2d_2/BiasAdd/ReadVariableOp"
      input: "^conv2d_2/Conv2D/ReadVariableOp"
      input: "^dense/BiasAdd/ReadVariableOp"
      input: "^dense/MatMul/ReadVariableOp"
      input: "^dense_1/BiasAdd/ReadVariableOp"
      input: "^dense_1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "conv2d_1_conv2d_readvariableop"
      value: "conv2d_1/Conv2D/ReadVariableOp:value:0"
    }
    ret {
      key: "conv2d_1_relu"
      value: "conv2d_1/Relu:activations:0"
    }
    ret {
      key: "conv2d_2_conv2d_readvariableop"
      value: "conv2d_2/Conv2D/ReadVariableOp:value:0"
    }
    ret {
      key: "conv2d_2_relu"
      value: "conv2d_2/Relu:activations:0"
    }
    ret {
      key: "conv2d_conv2d_readvariableop"
      value: "conv2d/Conv2D/ReadVariableOp:value:0"
    }
    ret {
      key: "conv2d_relu"
      value: "conv2d/Relu:activations:0"
    }
    ret {
      key: "dense_1_matmul_readvariableop"
      value: "dense_1/MatMul/ReadVariableOp:value:0"
    }
    ret {
      key: "dense_1_softmax"
      value: "dense_1/Softmax:softmax:0"
    }
    ret {
      key: "dense_matmul_readvariableop"
      value: "dense/MatMul/ReadVariableOp:value:0"
    }
    ret {
      key: "dense_relu"
      value: "dense/Relu:activations:0"
    }
    ret {
      key: "dropout_1_identity"
      value: "dropout_1/Identity:output:0"
    }
    ret {
      key: "dropout_identity"
      value: "dropout/Identity:output:0"
    }
    ret {
      key: "flatten_reshape"
      value: "flatten/Reshape:output:0"
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "inputs"
      value: "inputs_0"
    }
    ret {
      key: "max_pooling2d_maxpool"
      value: "max_pooling2d/MaxPool:output:0"
    }
    attr {
      key: "backward_function_name"
      value {
        s: "__inference___backward_call_389_453"
      }
    }
    control_ret {
      key: "conv2d/BiasAdd/ReadVariableOp"
      value: "conv2d/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "conv2d/Conv2D/ReadVariableOp"
      value: "conv2d/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "conv2d_1/BiasAdd/ReadVariableOp"
      value: "conv2d_1/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "conv2d_1/Conv2D/ReadVariableOp"
      value: "conv2d_1/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "conv2d_2/BiasAdd/ReadVariableOp"
      value: "conv2d_2/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "conv2d_2/Conv2D/ReadVariableOp"
      value: "conv2d_2/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "dense/BiasAdd/ReadVariableOp"
      value: "dense/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "dense/MatMul/ReadVariableOp"
      value: "dense/MatMul/ReadVariableOp"
    }
    control_ret {
      key: "dense_1/BiasAdd/ReadVariableOp"
      value: "dense_1/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "dense_1/MatMul/ReadVariableOp"
      value: "dense_1/MatMul/ReadVariableOp"
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 28
                }
                dim {
                  size: 28
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "inputs"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference___backward_forward_pass_280_507"
      input_arg {
        name: "placeholder"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_1"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_partitionedcall_grad_partitionedcall_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_1"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_10"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_12"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_13"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_14"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_10"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/PartitionedCall_grad/PartitionedCall_10"
      op: "PartitionedCall"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_partitionedcall_grad_partitionedcall"
      input: "gradients_partitionedcall_grad_partitionedcall_1"
      input: "gradients_partitionedcall_grad_partitionedcall_2"
      input: "gradients_partitionedcall_grad_partitionedcall_3"
      input: "gradients_partitionedcall_grad_partitionedcall_4"
      input: "gradients_partitionedcall_grad_partitionedcall_5"
      input: "gradients_partitionedcall_grad_partitionedcall_6"
      input: "gradients_partitionedcall_grad_partitionedcall_7"
      input: "gradients_partitionedcall_grad_partitionedcall_8"
      input: "gradients_partitionedcall_grad_partitionedcall_9"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_collective_manager_ids"
        value {
          list {
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "config"
        value {
          s: ""
        }
      }
      attr {
        key: "config_proto"
        value {
          s: "\n\007\n\003CPU\020\001\n\007\n\003GPU\020\0012\005*\0010J\0008\001\202\001\000"
        }
      }
      attr {
        key: "executor_type"
        value {
          s: ""
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference___backward_compute_loss_284_367"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/PartitionedCall_grad/PartitionedCall_10"
      }
    }
    node_def {
      name: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall"
      op: "PartitionedCall"
      input: "gradients/PartitionedCall_grad/PartitionedCall_10:output:0"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_1"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_2"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_3"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_4"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_5"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_6"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_7"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_8"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_9"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_10"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_11"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_12"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_13"
      input: "gradients_mnist_classifier_statefulpartitionedcall_grad_mnist_classifier_statefulpartitionedcall_14"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_collective_manager_ids"
        value {
          list {
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "config"
        value {
          s: ""
        }
      }
      attr {
        key: "config_proto"
        value {
          s: "\n\007\n\003CPU\020\001\n\007\n\003GPU\020\0012\005*\0010J\0008\001\202\001\000"
        }
      }
      attr {
        key: "executor_type"
        value {
          s: ""
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference___backward_call_389_453"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_5"
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_6"
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_7"
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_8"
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_9"
      }
    }
    node_def {
      name: "Identity_10"
      op: "Identity"
      input: "gradients/mnist_classifier/StatefulPartitionedCall_grad/PartitionedCall:output:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_10"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_10"
      value: "Identity_10:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    attr {
      key: "forward_function_name"
      value {
        s: "__forward_forward_pass_506"
      }
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 4608
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 4608
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 6
                }
                dim {
                  size: 6
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
                dim {
                  size: 10
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 64
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 20
                }
                dim {
                  size: 20
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
                dim {
                  size: 10
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 24
                }
                dim {
                  size: 24
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 32
                }
                dim {
                  size: 64
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 28
                }
                dim {
                  size: 28
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
                dim {
                  size: 5
                }
                dim {
                  size: 1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__forward_compute_loss_366"
      input_arg {
        name: "y_true"
        type: DT_INT32
      }
      input_arg {
        name: "y_pred_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_weighted_loss_sum_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_weighted_loss_const"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_clip_by_value"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_clip_by_value_minimum"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_const"
        type: DT_FLOAT
      }
      output_arg {
        name: "y_pred"
        type: DT_FLOAT
      }
      output_arg {
        name: "sparse_categorical_crossentropy_sub"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/Cast"
      op: "Cast"
      input: "y_true"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/Cast"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1e-07
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/Const"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/sub/x"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/sub"
      op: "Sub"
      input: "sparse_categorical_crossentropy/sub/x:output:0"
      input: "sparse_categorical_crossentropy/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/sub"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/clip_by_value/Minimum"
      op: "Minimum"
      input: "y_pred_0"
      input: "sparse_categorical_crossentropy/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/clip_by_value/Minimum"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/clip_by_value"
      op: "Maximum"
      input: "sparse_categorical_crossentropy/clip_by_value/Minimum:z:0"
      input: "sparse_categorical_crossentropy/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/clip_by_value"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/Log"
      op: "Log"
      input: "sparse_categorical_crossentropy/clip_by_value:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/Log"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/Cast_1"
      op: "Cast"
      input: "sparse_categorical_crossentropy/Cast:y:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/Cast_1"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\n\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/Shape"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/Shape"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      op: "SparseSoftmaxCrossEntropyWithLogits"
      input: "sparse_categorical_crossentropy/Log:y:0"
      input: "sparse_categorical_crossentropy/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tlabels"
        value {
          type: DT_INT64
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Const"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Mul"
      op: "Mul"
      input: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:loss:0"
      input: "sparse_categorical_crossentropy/weighted_loss/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Mul"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Const_1"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Sum"
      op: "Sum"
      input: "sparse_categorical_crossentropy/weighted_loss/Mul:z:0"
      input: "sparse_categorical_crossentropy/weighted_loss/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Sum"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/num_elements"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/num_elements"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/num_elements/Cast"
      op: "Cast"
      input: "sparse_categorical_crossentropy/weighted_loss/num_elements:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/num_elements/Cast"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Rank"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/range/start"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/range/delta"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/range"
      op: "Range"
      input: "sparse_categorical_crossentropy/weighted_loss/range/start:output:0"
      input: "sparse_categorical_crossentropy/weighted_loss/Rank:output:0"
      input: "sparse_categorical_crossentropy/weighted_loss/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/range"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/Sum_1"
      op: "Sum"
      input: "sparse_categorical_crossentropy/weighted_loss/Sum:output:0"
      input: "sparse_categorical_crossentropy/weighted_loss/range:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/Sum_1"
      }
    }
    node_def {
      name: "sparse_categorical_crossentropy/weighted_loss/value"
      op: "DivNoNan"
      input: "sparse_categorical_crossentropy/weighted_loss/Sum_1:output:0"
      input: "sparse_categorical_crossentropy/weighted_loss/num_elements/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "sparse_categorical_crossentropy/weighted_loss/value"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "sparse_categorical_crossentropy/weighted_loss/value:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_clip_by_value"
      value: "sparse_categorical_crossentropy/clip_by_value:z:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_clip_by_value_minimum"
      value: "sparse_categorical_crossentropy/clip_by_value/Minimum:z:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_const"
      value: "sparse_categorical_crossentropy/Const:output:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
      value: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:loss:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits_0"
      value: "sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:backprop:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_sub"
      value: "sparse_categorical_crossentropy/sub:z:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_weighted_loss_const"
      value: "sparse_categorical_crossentropy/weighted_loss/Const:output:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
      value: "sparse_categorical_crossentropy/weighted_loss/num_elements/Cast:y:0"
    }
    ret {
      key: "sparse_categorical_crossentropy_weighted_loss_sum_1"
      value: "sparse_categorical_crossentropy/weighted_loss/Sum_1:output:0"
    }
    ret {
      key: "y_pred"
      value: "y_pred_0"
    }
    attr {
      key: "backward_function_name"
      value {
        s: "__inference___backward_compute_loss_284_367"
      }
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "y_true"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "y_pred"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference___backward_compute_loss_284_367"
      input_arg {
        name: "placeholder"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_div_no_nan_sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_neg_sparse_categorical_crossentropy_weighted_loss_sum_1"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_weighted_loss_mul_grad_mul_sparse_categorical_crossentropy_weighted_loss_const"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_weighted_loss_mul_grad_mul_1_sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_zeros_like_sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_log_grad_reciprocal_sparse_categorical_crossentropy_clip_by_value"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_clip_by_value_grad_greaterequal_sparse_categorical_crossentropy_clip_by_value_minimum"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_clip_by_value_grad_greaterequal_sparse_categorical_crossentropy_const"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_clip_by_value_minimum_grad_lessequal_y_pred"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_sparse_categorical_crossentropy_clip_by_value_minimum_grad_lessequal_sparse_categorical_crossentropy_sub"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan"
      op: "DivNoNan"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_div_no_nan_sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan:z:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Neg"
      op: "Neg"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_neg_sparse_categorical_crossentropy_weighted_loss_sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Neg"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_1"
      op: "DivNoNan"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Neg:y:0"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_div_no_nan_sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_2"
      op: "DivNoNan"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_1:z:0"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_value_grad_div_no_nan_sparse_categorical_crossentropy_weighted_loss_num_elements_cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_2"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/mul"
      op: "Mul"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/div_no_nan_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/mul"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum_1"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/mul:z:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Sum_1:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape/shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape/shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape/shape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/value_grad/Reshape:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape/shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Const"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Reshape:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Tile"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_1_grad/Tile:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Const"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Tile"
      op: "Tile"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Reshape:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Tile"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s0"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s0:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs/s1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Tile:output:0"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_mul_grad_mul_sparse_categorical_crossentropy_weighted_loss_const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients_sparse_categorical_crossentropy_weighted_loss_mul_grad_mul_1_sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Sum_grad/Tile:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum/reduction_indices"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul_1:z:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape/shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape/shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape/shape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Sum:output:0"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape/shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/zeros_like"
      op: "ZerosLike"
      input: "gradients_zeros_like_sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/zeros_like"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
      op: "ExpandDims"
      input: "gradients/sparse_categorical_crossentropy/weighted_loss/Mul_grad/Mul:z:0"
      input: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
      op: "Mul"
      input: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims:output:0"
      input: "gradients_zeros_like_sparse_categorical_crossentropy_sparsesoftmaxcrossentropywithlogits_sparsesoftmaxcrossentropywithlogits"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal"
      op: "Reciprocal"
      input: "gradients_sparse_categorical_crossentropy_log_grad_reciprocal_sparse_categorical_crossentropy_clip_by_value"
      input: "^gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/Log_grad/mul"
      op: "Mul"
      input: "gradients/sparse_categorical_crossentropy/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul:z:0"
      input: "gradients/sparse_categorical_crossentropy/Log_grad/Reciprocal:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/Log_grad/mul"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\n\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\n\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros/Const"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_2:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients_sparse_categorical_crossentropy_clip_by_value_grad_greaterequal_sparse_categorical_crossentropy_clip_by_value_minimum"
      input: "gradients_sparse_categorical_crossentropy_clip_by_value_grad_greaterequal_sparse_categorical_crossentropy_const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/sparse_categorical_crossentropy/Log_grad/mul:z:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/zeros:output:0"
      input: "gradients/sparse_categorical_crossentropy/Log_grad/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/SelectV2_1:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Sum_1:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\n\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\n\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients_sparse_categorical_crossentropy_clip_by_value_minimum_grad_lessequal_y_pred"
      input: "gradients_sparse_categorical_crossentropy_clip_by_value_minimum_grad_lessequal_sparse_categorical_crossentropy_sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/zeros:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1:output:0"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/sparse_categorical_crossentropy/clip_by_value/Minimum_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "forward_function_name"
      value {
        s: "__forward_compute_loss_366"
      }
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 10
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__forward_forward_pass_506"
      input_arg {
        name: "batch_data"
        type: DT_FLOAT
      }
      input_arg {
        name: "y_true"
        type: DT_INT32
      }
      input_arg {
        name: "mnist_classifier_204"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_206"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_208"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_210"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_212"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_214"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_216"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_218"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_220"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mnist_classifier_222"
        type: DT_RESOURCE
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "partitionedcall_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_10"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_11"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_12"
        type: DT_FLOAT
      }
      output_arg {
        name: "mnist_classifier_statefulpartitionedcall_13"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "mnist_classifier/StatefulPartitionedCall"
    }
    node_def {
      name: "mnist_classifier/StatefulPartitionedCall"
      op: "StatefulPartitionedCall"
      input: "batch_data"
      input: "mnist_classifier_204"
      input: "mnist_classifier_206"
      input: "mnist_classifier_208"
      input: "mnist_classifier_210"
      input: "mnist_classifier_212"
      input: "mnist_classifier_214"
      input: "mnist_classifier_216"
      input: "mnist_classifier_218"
      input: "mnist_classifier_220"
      input: "mnist_classifier_222"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
            type: DT_RESOURCE
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_collective_manager_ids"
        value {
          list {
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
            i: 1
            i: 2
            i: 3
            i: 4
            i: 5
            i: 6
            i: 7
            i: 8
            i: 9
            i: 10
          }
        }
      }
      attr {
        key: "config"
        value {
          s: ""
        }
      }
      attr {
        key: "config_proto"
        value {
          s: "\n\007\n\003CPU\020\001\n\007\n\003GPU\020\0012\005*\0010J\0008\001\202\001\000"
        }
      }
      attr {
        key: "executor_type"
        value {
          s: ""
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__forward_call_452"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mnist_classifier/StatefulPartitionedCall"
      }
    }
    node_def {
      name: "PartitionedCall"
      op: "PartitionedCall"
      input: "y_true"
      input: "mnist_classifier/StatefulPartitionedCall:output:0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT32
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_collective_manager_ids"
        value {
          list {
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "config"
        value {
          s: ""
        }
      }
      attr {
        key: "config_proto"
        value {
          s: "\n\007\n\003CPU\020\001\n\007\n\003GPU\020\0012\005*\0010J\0008\001\202\001\000"
        }
      }
      attr {
        key: "executor_type"
        value {
          s: ""
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__forward_compute_loss_366"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "PartitionedCall"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PartitionedCall:output:0"
      input: "^mnist_classifier/StatefulPartitionedCall"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall"
      value: "mnist_classifier/StatefulPartitionedCall:output:1"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_0"
      value: "mnist_classifier/StatefulPartitionedCall:output:2"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_1"
      value: "mnist_classifier/StatefulPartitionedCall:output:3"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_10"
      value: "mnist_classifier/StatefulPartitionedCall:output:12"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_11"
      value: "mnist_classifier/StatefulPartitionedCall:output:13"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_12"
      value: "mnist_classifier/StatefulPartitionedCall:output:14"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_13"
      value: "mnist_classifier/StatefulPartitionedCall:output:15"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_2"
      value: "mnist_classifier/StatefulPartitionedCall:output:4"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_3"
      value: "mnist_classifier/StatefulPartitionedCall:output:5"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_4"
      value: "mnist_classifier/StatefulPartitionedCall:output:6"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_5"
      value: "mnist_classifier/StatefulPartitionedCall:output:7"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_6"
      value: "mnist_classifier/StatefulPartitionedCall:output:8"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_7"
      value: "mnist_classifier/StatefulPartitionedCall:output:9"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_8"
      value: "mnist_classifier/StatefulPartitionedCall:output:10"
    }
    ret {
      key: "mnist_classifier_statefulpartitionedcall_9"
      value: "mnist_classifier/StatefulPartitionedCall:output:11"
    }
    ret {
      key: "partitionedcall"
      value: "PartitionedCall:output:1"
    }
    ret {
      key: "partitionedcall_0"
      value: "PartitionedCall:output:2"
    }
    ret {
      key: "partitionedcall_1"
      value: "PartitionedCall:output:3"
    }
    ret {
      key: "partitionedcall_2"
      value: "PartitionedCall:output:4"
    }
    ret {
      key: "partitionedcall_3"
      value: "PartitionedCall:output:5"
    }
    ret {
      key: "partitionedcall_4"
      value: "PartitionedCall:output:6"
    }
    ret {
      key: "partitionedcall_5"
      value: "PartitionedCall:output:7"
    }
    ret {
      key: "partitionedcall_6"
      value: "PartitionedCall:output:8"
    }
    ret {
      key: "partitionedcall_7"
      value: "PartitionedCall:output:9"
    }
    ret {
      key: "partitionedcall_8"
      value: "PartitionedCall:output:10"
    }
    attr {
      key: "backward_function_name"
      value {
        s: "__inference___backward_forward_pass_280_507"
      }
    }
    control_ret {
      key: "mnist_classifier/StatefulPartitionedCall"
      value: "mnist_classifier/StatefulPartitionedCall"
    }
    arg_attr {
      key: 0
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
                dim {
                  size: 28
                }
                dim {
                  size: 28
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "batch_data"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1024
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "y_true"
          }
        }
      }
    }
  }
}
versions {
  producer: 561
}
